version: '3'
services:
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      # Basic node configuration
      KAFKA_NODE_ID: 1                    # Unique identifier for this Kafka node

      # KRaft mode configuration
      KAFKA_PROCESS_ROLES: 'broker,controller'  # This node acts as both broker and controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'  # KRaft quorum configuration

      # Listener Configuration
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093'
      # - PLAINTEXT listener on 9092 for client communications
      # - CONTROLLER listener on 9093 for internal metadata management

      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092' # Address that will be given to clients
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT' # Defines security protocols for each listener
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'  # Specifies which listener is for controller communications
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT' # Listener used for inter-broker communication

      # Single-node configuration
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # Set to 1 for single-node deployments (normally should be 3)

      CLUSTER_ID: 'xyz123' # Unique identifier for the Kafka cluster

  producer:
    build:
      context: .  # Build context is current directory
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      # Activate the docker profile in Spring Boot
      SPRING_PROFILES_ACTIVE: docker
    command: java -jar kafka-producer/target/kafka-producer-1.0-SNAPSHOT.jar

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    environment:
      # Activate the docker profile in Spring Boot
      SPRING_PROFILES_ACTIVE: docker
    command: java -jar kafka-consumer/target/kafka-consumer-1.0-SNAPSHOT.jar

  influxdb:
    image: influxdb:latest
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=influx123
      - DOCKER_INFLUXDB_INIT_ORG=myorg
      - DOCKER_INFLUXDB_INIT_BUCKET=telemetry
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-token
    volumes:
      - influxdb-data:/var/lib/influxdb2

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana123
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - influxdb

volumes:
  influxdb-data:
  grafana-data: